@model ProgramWeb.Models.ViewModel.UserProjectsViewModel
@using Microsoft.AspNet.Identity


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

<div class="container hideMe">
    <h2>@Html.ActionLink(User.Identity.GetUserName(), "UserInfo", "Project", routeValues: null, htmlAttributes: new { @class = "userName", title = "Manage" })</h2>
    <div class="panel-group">
        <div class="panel panel-default">
            <div class="panel-heading projectInfoItems">
                <h3 class="panel-title">
                    <a data-toggle="collapse" href="#collapse1">My projects</a>
                </h3>
            </div>

            <div id="collapse1" class="panel-collapse collapse">
                <ul class="list-group project">
                    @foreach (var project in Model.OwnedProjectList)
                    {
                        <li class="list-group-item selectedProject" data-id="@project.Id" onclick="projectSelection(this)"><a data-toggle="collapse" href="#@project.Id">@project.Name</a></li>
                        <li id="@project.Id" class="panel-collapse collapse">
                            <ul>
                                @foreach (var file in project.ProjectFiles)
                                {
                                    <li class="list-group-item selected" data-id="@file.ID" onclick="setEditorContent('@file.ID', this)"><a href="#@file.ID">@file.Name</a></li>
                                }
                            </ul>
                        </li>
                    }
                </ul>


            </div>
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title">
                            <a data-toggle="collapse" href="#collapse2">Contributed Projects</a>
                        </h3>
                    </div>

                    <div id="collapse2" class="panel-collapse collapse">
                        <ul class="list-group">
                            @foreach (var invProject in Model.InvitedProjectList)
                            {
                                <li class="list-group-item selectedProject" data-id="@invProject.Id" onclick="projectSelection(this)"><a data-toggle="collapse" href="#@invProject.Id">@invProject.Name</a></li>
                                <li id="@invProject.Id" class="panel-collapse collapse">
                                    <ul>
                                        @foreach (var file in invProject.ProjectFiles)
                                        {
                                            
                                            <li class="list-group-item selected" data-id="@file.ID" onclick="setEditorContent('@file.ID', this)"><a href="#@file.ID">@file.Name</a></li>
                                        }
                                    </ul>
                                </li>
                            }
                        </ul>
                    </div>

                    @using (Html.BeginForm("Invite", "Project", FormMethod.Get, new { @class = "form-horizontal", role = "form" }))
            {
                        <div hidden> @Html.TextBox("projectId", null, new { @id = "projectId" }) </div>
                        <input type="submit" value="Invite" onclick="invite()" class="btn-aside btn-editor btn-invite"/>
                    }
                </div>
            </div>
        </div>


<script>

    function saveButton() {
        var fileID = $(".selected").attr('data-id');
        var content = editor.getSession().getValue();
        SaveFileAjax(fileID, content);
    };
    function invite() {
        var projectId = $(".selectedProject").attr('data-id');
        console.log(projectId);
        $('#projectId').val(projectId);
        var url = '@Url.Action("Invite", "Project")';
        window.location.href = url
    }
    function projectSelection(currentObject) {
        setSelectedProject(currentObject);
        var projectId = $(".selectedProject").attr('data-id');
        $('#hiddenProjectID').attr('value', projectId);
    }

    function setEditorContent(value, currentObject) {
        setSelected(currentObject);
        GetFileAjax(value).done(function (response) {
            editor.getSession().setValue(response.Content)
        });
    };

    function GetFileAjax(value) {
        return $.ajax({
            url: '@Url.Action("GetFileForEditor", "Project")',
            data: { id: value },
            type: "POST"
        });
    };

    function setSelected(currentObject) {
        $(".selected").removeClass("selected");
        $(currentObject).addClass("selected");
    };

    function setSelectedProject(currentObject) {
        $(".selectedProject").removeClass("selectedProject");
        $(currentObject).addClass("selectedProject");
    };

    function SaveFileAjax(value, content) {
        $.ajax({
            url: '@Url.Action("SaveFileForEditor", "Project")',
            data: {
                id: value,
                content: content
            },
            type: "POST"
        });
    };


    var acc = document.getElementsByClassName("accordion");
    var i;

    for (i = 0; i < acc.length; i++) {
        acc[i].onclick = function () {
            /* Toggle between adding and removing the "active" class,
            to highlight the button that controls the panel */
            this.classList.toggle("active");

            /* Toggle between hiding and showing the active panel */
            var panel = this.nextElementSibling;
            if (panel.style.display === "block") {
                panel.style.display = "none";
            } else {
                panel.style.display = "block";
            }
        }
    };

</script>
<!-- Sidebar -->
